---
# Source: ai-assist/templates/model-triton.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-triton
  labels:
    app: model-triton
    helm.sh/chart: ai-assist-0.1.0
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    shard: "default"
    stage: "main"
    tier: "sv"
    type: "ai-assist"
spec:
  replicas: 12
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: model-triton
  template:
    metadata:
      labels:
        app: model-triton
    spec:
      imagePullSecrets:
        - name: gitlab-registry
      containers:
        - name: triton
          image: registry.gitlab.com/gitlab-org/modelops/applied-ml/code-suggestions/ai-assist/tmp/triton-server:363a6123
          ports:
            - containerPort: 8000
            - containerPort: 8001
            - containerPort: 8002
          env:
            - name: MODEL_REPOSITORY
              value: "/data/models"
            - name: TRITON_BIN
              value: "/opt/tritonserver/bin/tritonserver"
          command: ["/bin/bash", "-c", "--"]
          args:
            - "$(TRITON_BIN) --model-repository=$(MODEL_REPOSITORY)"
          volumeMounts:
            - name: model-storage-volume
              mountPath: /data
              readOnly: true
            - name: dshm
              mountPath: /dev/shm
          resources:
            limits:
              nvidia.com/gpu: "1"
          readinessProbe:
            httpGet:
              path: /v2/health/ready
              port: 8000
            periodSeconds: 10
            initialDelaySeconds: 900
            timeoutSeconds: 1
            failureThreshold: 3
      volumes:
        - name: model-storage-volume
          persistentVolumeClaim:
            claimName: model-storage-pvc
        - name: dshm
          emptyDir:
            sizeLimit: "2Gi"
            medium: "Memory"
---
# Source: ai-assist/templates/model-triton.yaml
apiVersion: v1
kind: Service
metadata:
  name: model-k8s-triton
  labels:
    app: model-triton
    helm.sh/chart: ai-assist-0.1.0
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    shard: "default"
    stage: "main"
    tier: "sv"
    type: "ai-assist"
spec:
  type: ClusterIP
  selector:
    app: model-triton
  ports:
    - name: api
      port: 8080
      targetPort: 8001
    - name: metrics
      port: 8082
      targetPort: 8002
---
# Source: ai-assist/templates/model-triton.yaml
# Headless service for GRPC
apiVersion: v1
kind: Service
metadata:
  name: model-k8s-triton-headless
  labels:
    app: model-triton-headless
    helm.sh/chart: ai-assist-0.1.0
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    shard: "default"
    stage: "main"
    tier: "sv"
    type: "ai-assist"
spec:
  clusterIP: None
  ports:
    - name: api
      port: 8001
      targetPort: 8001
  selector:
    app: model-triton
---
# Source: ai-assist/templates/model-triton.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: model-triton
  labels:
    release: prometheus
    helm.sh/chart: ai-assist-0.1.0
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    shard: "default"
    stage: "main"
    tier: "sv"
    type: "ai-assist"
spec:
  endpoints:
    - interval: 30s
      port: metrics
  selector:
    matchLabels:
      app: model-triton
