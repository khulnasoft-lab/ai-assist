image: python:3.10-slim-buster

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - lint
  - test
  - build
  - docker
  - post-build-test
  - publish

include:
  - template: Security/Container-Scanning.gitlab-ci.yml

variables:
  API_IMAGE: $CI_REGISTRY_IMAGE/api
  MODEL_LOADER_IMAGE: $CI_REGISTRY_IMAGE/model-loader
  TRITON_SERVER_IMAGE: $CI_REGISTRY_IMAGE/triton-server
  DOCKER_TLS_CERTDIR: "/certs"

.docker:
  image: docker:20.10.21
  services:
    - docker:20.10.21-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

flake8:
  image: registry.gitlab.com/pipeline-components/flake8:latest
  stage: lint
  script:
    - flake8 api

dokter:
  image: registry.gitlab.com/gitlab-org/incubation-engineering/ai-assist/dokter/dokter
  stage: lint
  script:
    - dokter -d api/Dockerfile -c
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "dokter-$CI_COMMIT_SHA.json"
      sast:
        - "dokter-sast-$CI_COMMIT_SHA.json"
    paths:
      - "dokter-$CI_COMMIT_SHA.json"
      - "dokter-sast-$CI_COMMIT_SHA.json"

docker-build-api:
  extends: [ ".docker" ]
  stage: docker
  script:
    - docker build -t $API_IMAGE:$CI_COMMIT_SHA -f api/Dockerfile .
    - docker push $API_IMAGE:$CI_COMMIT_SHA
  cache:
    key: build-cache-$CI_COMMIT_REF_NAME
    paths:
      - dist/

docker-build-model-loader:
  extends: [ ".docker" ]
  stage: docker
  variables:
    TARGET_IMAGE: $MODEL_LOADER_IMAGE:$CI_COMMIT_SHA
  script:
    - docker build -t $TARGET_IMAGE model-loader/.
    - docker push $TARGET_IMAGE

docker-build-triton-server:
  extends: [ ".docker" ]
  stage: docker
  variables:
    TARGET_IMAGE: $TRITON_SERVER_IMAGE:$CI_COMMIT_SHA
  script:
    - docker build -t $TARGET_IMAGE triton/.
    - docker push $TARGET_IMAGE

container_scanning:
  stage: post-build-test
  variables:
    DOCKER_IMAGE: $API_IMAGE:$CI_COMMIT_SHA
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == 'true'

registry:
  image: docker:latest
  services:
    - docker:dind
  stage: publish
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull $API_IMAGE:$CI_COMMIT_SHA
    - docker tag $API_IMAGE:$CI_COMMIT_SHA $API_IMAGE:$CI_COMMIT_REF_NAME
    - docker tag $API_IMAGE:$CI_COMMIT_SHA $API_IMAGE:latest
    - docker push -a $API_IMAGE
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == 'true'
