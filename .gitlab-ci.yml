image: python:3.9.13

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

stages:
  - lint
  - build
  - docker
  - post-build-test
  - publish

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/poetry"
  VENV_DIR: "$CI_PROJECT_DIR/.venv"

  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TRITON_SERVER_TMP: "$CI_REGISTRY_IMAGE/tmp/triton-server"
  DOCKER_MODEL_LOADER_CODEGEN_TMP: "$CI_REGISTRY_IMAGE/tmp/model-codegen-loader"

cache:
  key:
    files:
      - poetry.lock
      - .gitlab-ci.yml
  paths:
    - .cache/pip
    - $VENV_DIR
    - $POETRY_CACHE_DIR

.poetry:
  before_script:
    - pip install poetry==1.3.1
    - poetry config virtualenvs.in-project true
    - poetry config cache-dir ${POETRY_CACHE_DIR}
    - poetry config --list

.docker:
  image: docker:20.10.21
  services:
    - docker:20.10.21-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

lint:
  extends: .poetry
  stage: lint
  allow_failure: true
  script:
    - poetry install --with lint
    - poetry run flake8 codesuggestions

install:
  extends: .poetry
  stage: build
  script:
    - poetry install

build-docker-triton-tmp:
  extends: .docker
  stage: build
  cache: {}
  variables:
    TARGET_IMAGE: "$DOCKER_TRITON_SERVER_TMP:$CI_COMMIT_SHA"
  script:
    - docker build -t $TARGET_IMAGE triton/.
    - docker push $TARGET_IMAGE

build-docker-model-codegen-loader-tmp:
  extends: .docker
  stage: build
  cache: {}
  parallel:
    matrix:
      - MODEL_NAME: Salesforce/codegen-350M-multi
        TARGET_IMAGE: "$DOCKER_MODEL_LOADER_CODEGEN_TMP:350m-multi-$CI_COMMIT_SHORT_SHA"
      - MODEL_NAME: Salesforce/codegen-16B-multi
        TARGET_IMAGE: "$DOCKER_MODEL_LOADER_CODEGEN_TMP:16b-multi-$CI_COMMIT_SHORT_SHA"
  script:
    - docker build -t $TARGET_IMAGE --build-arg MODEL_NAME=$MODEL_NAME triton/models/.
    - docker push $TARGET_IMAGE


#include:
#  - template: Security/Container-Scanning.gitlab-ci.yml
#
#variables:
#  API_IMAGE: $CI_REGISTRY_IMAGE/api
#  MODEL_LOADER_IMAGE: $CI_REGISTRY_IMAGE/model-loader
#  TRITON_SERVER_IMAGE: $CI_REGISTRY_IMAGE/triton-server
#  MODEL_LOADER_CODEGEN_IMAGE: $CI_REGISTRY_IMAGE/model-codegen-loader
#  DOCKER_TLS_CERTDIR: "/certs"
#
#.docker:
#  image: docker:20.10.21
#  services:
#    - docker:20.10.21-dind
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#
#flake8:
#  image: registry.gitlab.com/pipeline-components/flake8:latest
#  stage: lint
#  script:
#    - flake8 api
#
#dokter:
#  image: registry.gitlab.com/gitlab-org/incubation-engineering/ai-assist/dokter/dokter
#  stage: lint
#  script:
#    - dokter -d api/Dockerfile -c
#  artifacts:
#    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
#    expire_in: 1 day
#    when: always
#    reports:
#      codequality:
#        - "dokter-$CI_COMMIT_SHA.json"
#      sast:
#        - "dokter-sast-$CI_COMMIT_SHA.json"
#    paths:
#      - "dokter-$CI_COMMIT_SHA.json"
#      - "dokter-sast-$CI_COMMIT_SHA.json"
#
#docker-build-api:
#  extends: [ ".docker" ]
#  stage: docker
#  script:
#    - docker build -t $API_IMAGE:$CI_COMMIT_SHA -f api/Dockerfile .
#    - docker push $API_IMAGE:$CI_COMMIT_SHA
#  cache:
#    key: build-cache-$CI_COMMIT_REF_NAME
#    paths:
#      - dist/
#
#docker-build-model-loader:
#  extends: [ ".docker" ]
#  stage: docker
#  variables:
#    TARGET_IMAGE: $MODEL_LOADER_IMAGE:$CI_COMMIT_SHA
#  script:
#    - docker build -t $TARGET_IMAGE model-loader/.
#    - docker push $TARGET_IMAGE
#
#docker-build-triton-server:
#  extends: [ ".docker" ]
#  stage: docker
#  variables:
#    TARGET_IMAGE: $TRITON_SERVER_IMAGE:$CI_COMMIT_SHA
#  script:
#    - docker build -t $TARGET_IMAGE triton/.
#    - docker push $TARGET_IMAGE
#
#docker-build-model-codegen-loader:
#  extends: [ ".docker" ]
#  stage: docker
#  parallel:
#    matrix:
#      - MODEL_NAME: Salesforce/codegen-350M-multi
#        TARGET_IMAGE: $MODEL_LOADER_CODEGEN_IMAGE:350m-multi-$CI_COMMIT_SHORT_SHA
#      - MODEL_NAME: Salesforce/codegen-16B-multi
#        TARGET_IMAGE: $MODEL_LOADER_CODEGEN_IMAGE:16b-multi-$CI_COMMIT_SHORT_SHA
#  script:
#    - docker build -t $TARGET_IMAGE --build-arg MODEL_NAME=$MODEL_NAME triton/models/.
#    - docker push $TARGET_IMAGE
#
#container_scanning:
#  stage: post-build-test
#  variables:
#    DOCKER_IMAGE: $API_IMAGE:$CI_COMMIT_SHA
#  rules:
#    - if: $CI_COMMIT_REF_PROTECTED == 'true'
#
#registry:
#  image: docker:latest
#  services:
#    - docker:dind
#  stage: publish
#  variables:
#    GIT_STRATEGY: none
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  script:
#    - docker pull $API_IMAGE:$CI_COMMIT_SHA
#    - docker tag $API_IMAGE:$CI_COMMIT_SHA $API_IMAGE:$CI_COMMIT_REF_NAME
#    - docker tag $API_IMAGE:$CI_COMMIT_SHA $API_IMAGE:latest
#    - docker push -a $API_IMAGE
#  rules:
#    - if: $CI_COMMIT_REF_PROTECTED == 'true'
