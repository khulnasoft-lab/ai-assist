---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-triton
  labels:
    app: model-triton
    {{- include "ai-assist.labels" . | nindent 4 }}
    {{ include "common.tplvalues.render" (dict "value" .Values.modelTriton.labels "context" $) }}
spec:
  replicas: {{ .Values.modelTriton.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: model-triton
      {{- include "ai-assist.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: model-triton
        {{- include "ai-assist.selectorLabels" . | nindent 8 }}
        {{- include "ai-assist.labels" . | nindent 8 }}
        {{ include "common.tplvalues.render" (dict "value" .Values.modelTriton.labels "context" $) }}
    spec:
      imagePullSecrets:
        - name: gitlab-registry
      containers:
        - name: triton
          image: {{ .Values.modelTriton.triton.image.repository }}:{{ .Values.modelTriton.triton.image.tag }}
          ports:
            - containerPort: 8000
            - containerPort: 8001
            - containerPort: 8002
          env:
            - name: MODEL_REPOSITORY
              value: {{ quote .Values.modelTriton.triton.env.modelRepository }}
            - name: TRITON_BIN
              value: {{ quote .Values.modelTriton.triton.env.tritonBin }}
          command: ["/bin/bash", "-x", "-c", "--"]
          # Metrics options are documented here:
          # https://github.com/triton-inference-server/server/blob/main/docs/user_guide/metrics.md
          # TODO: add --allow-cpu-metrics true
          # TODO: add --metrics-config summary_latencies=true
          args:
            - |
              $(TRITON_BIN) \
                --model-repository=$(MODEL_REPOSITORY) \
                --allow-metrics true \
                --allow-gpu-metrics true
          volumeMounts:
            - name: model-storage-volume
              mountPath: /data
              readOnly: true
            - name: dshm
              mountPath: /dev/shm
          resources:
            limits:
              nvidia.com/gpu: {{ quote .Values.modelTriton.triton.resources.limits.gpu }}
              
          # Give the triton container 20m (1200s, 120*10s)
          # to startup...
          startupProbe:
            httpGet:
              path: /v2/health/ready
              port: 8000
            failureThreshold: 120
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /v2/health/ready
              port: 8000
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
      volumes:
        - name: model-storage-volume
          persistentVolumeClaim:
            claimName: model-storage-pvc
        - name: dshm
          emptyDir:
            sizeLimit: "2Gi"
            medium: "Memory"
---
apiVersion: v1
kind: Service
metadata:
  name: model-k8s-triton
  labels:
    app: model-triton
    {{- include "ai-assist.labels" . | nindent 4 }}
    {{ include "common.tplvalues.render" (dict "value" .Values.modelK8STriton.labels "context" $) }}
{{- if ne (include "common.tplvalues.render" (dict "value" .Values.modelK8STriton.service.annotations "context" $)) "null" }}
  annotations:
    {{- include "common.tplvalues.render" (dict "value" .Values.modelK8STriton.service.annotations "context" $) | nindent 4 }}
{{- end }}
spec:
  type: {{ .Values.modelK8STriton.service.type }}
  selector:
    app: model-triton
    {{- include "ai-assist.selectorLabels" . | nindent 4 }}
  ports:
    - name: api
      port: 8080
      targetPort: 8001
    - name: metrics
      port: 8082
      targetPort: 8002
---
# Headless service for GRPC
apiVersion: v1
kind: Service
metadata:
  name: model-k8s-triton-headless
  labels:
    app: model-triton-headless
    {{- include "ai-assist.labels" . | nindent 4 }}
    {{ include "common.tplvalues.render" (dict "value" .Values.modelK8STriton.labels "context" $) }}
spec:
  clusterIP: None
  ports:
    - name: api
      port: 8001
      targetPort: 8001
  selector:
    app: model-triton
    {{- include "ai-assist.selectorLabels" . | nindent 4 }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: model-triton
  labels:
    release: prometheus
    {{- include "ai-assist.labels" . | nindent 4 }}
    type: monitoring
spec:
  endpoints:
    - interval: 30s
      port: metrics
  selector:
    matchLabels:
      app: model-triton
      {{- include "ai-assist.selectorLabels" . | nindent 6 }}
